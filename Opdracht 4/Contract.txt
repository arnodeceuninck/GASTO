// GASTO is een rapportensysteem dat gebruik maakt van allerlei
// datastructuren die tijdens de lessen van GAS gezien zijn.
// Het doel van het systeem is om alle gegevens efficient bij te houden, 
// aan te passen en op te vragen. 

// DATASTRUCTUREN
// hieronder vind je de operation contracts van alle gebruikte datastructuren

// Queue
// verantwoordelijke implementeren:
// verantwoordelijke testen:

+createQueue()
+destroyQueue()
+isEmpty(): boolean
+enqueue(in newItem: QueueItemType): boolean
+dequeue(): boolean
+dequeue(): boolean + QueueItemType 
// Probleem: 2 return values in python niet mogelijk
// Probleem: 2 functies met dezelfde naam in python niet mogelijk
+getFront(): QueueItemType + boolean // Probleem

// Stack
// verantwoordelijke implementeren:
// verantwoordelijke testen:

+createStack()
+destroyStack()

// DLC: Double Linked Chain
// verantwoordelijke implementeren:
// verantwoordelijke testen:

+createDLC()
+destroyDLC()
+isEmpty(): boolean
+insert(): boolean
+delete(): boolean

// CLC: Circular Linked Chain
// verantwoordelijke implementeren:
// verantwooedelijke testen:

+createCLC()
+destroyCLc()
+isEmpty(): boolean 
+getLength(): boolean
+insert(in index: integer, in newitem: ListItemType): boolean
+delete(in index: integer): boolean
+retrieve(in index: integer): ListItemType

// BST: Binary Search Tree
// verantwoordelijke implementeren
// verantwoordelijke testen

+createBST(in rootitem: ListItemType, in rootKey: Integer)
+destroyBST()
+isEmpty(): boolean
+insert(): boolean
+retrieve(in rootKey: integer): ListItemType


// CLASSES
// hieronder vind je de operation contracts van alle gebruikte classes

// Leraar
// verantwoordelijke implementeren:
// verantwoordelijke testen:

// Leerling
// verantwoordelijke implementeren:
// verantwoordelijke testen:

// Toets
// verantwoordelijke implementeren:
// verantwoordelijke testen:

// Punt
// verantwoordelijke implementeren:
// verantwoordelijke testen:

// Puntenlijst
// verantwoordelijke implementeren:
// verantwoordelijke testen:

// Rapport
// verantwoordelijke implementeren:
// verantwoordelijke testen:

