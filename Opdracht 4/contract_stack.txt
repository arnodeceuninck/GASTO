// Stack
// verantwoordelijke implementeren: Sen
// verantwoordelijke testen: Rob

// Een stack is een ADT die een FILO systeem (First In, Last Out) toepast.
// Het eerste element dat je aan deze ADT toevoegd, is het laatste element dat de ADT zal teruggeven.
// Alle elementen hebben hetzelfde datatype.
// StackItemType is het type van de elementen die in de stack zitten.

+createStack()
// Precondition: Maakt een nieuwe stack aan.
// Postcondition: Er is een nieuwe lege stack aangemaakt met alle default waarden.

+destroyStack()
// Precondition: De stack bestaat en moet verwijderd worden.
// Postcondition: De stack bestaat niet meer. Alle elementen en verwijzigingen zijn verwijderd.

+isEmpty(): boolean
// Precondition: De stack bestaat en je wil weten of er elementen inzitten.
// Postcondition: De method returnt true indien de stack elementen bevat. Als de
// stack geen elementen bevat zal je een false terugkrijgen.

+push(in newItem:StackItemType)
// Preconditon: Je wilt een nieuw item toeveogen aan de stack.
// Postcondition: indien er true gereturnd wordt is het element bovenaan toegevoegd aan de stack.

+pop() (boolean, StackItemType)
// Precondition: Je wilt het bovenste element verwijderen.
// Postcondition: Plaatst de top van een stack (d.i. het laatst toegevoegde element) in
// ‘stackTop’ en verwijdert dan deze top.
// ‘success’ duidt aan of het verwijderen gelukt is.

+getTop() (boolean, StackItemType)
// Precondition: Je wilt het laatst toegevoegde element opvragen.
// Postconditin: Plaatst de top van een stack (d.i. het laatst toegevoegde element) in
// ‘stackTop’ en laat de stack ongewijzigd. ‘success’ duidt aan of het gelukt is.

+getLength() size: integer
// precondition: Je wilt de lengte van de stack weten.
// Postcondition: Geeft de lengte van de stack terug.

+print()
// Precondition: Je wilt een dotfile van de stack.
// Postcondition: Maakt een dotfile van de stack.